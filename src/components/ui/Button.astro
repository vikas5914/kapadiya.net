---
import { cn } from "../../lib/utils";

export interface Props {
  variant?: "default" | "destructive" | "outline" | "secondary" | "ghost" | "link" | "orange";
  size?: "default" | "sm" | "lg" | "icon";
  type?: "button" | "submit" | "reset";
  disabled?: boolean;
  href?: string;
  class?: string;
  [key: string]: any;
}

const { 
  variant = "default", 
  size = "default", 
  type = "button",
  disabled = false,
  href,
  class: className,
  ...rest 
} = Astro.props;

const baseClasses = "inline-flex items-center justify-center whitespace-nowrap text-sm font-medium ring-offset-background transition-colors focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50";

const variantClasses = {
  default: "bg-primary text-primary-foreground hover:bg-primary/90",
  destructive: "bg-destructive text-destructive-foreground hover:bg-destructive/90",
  outline: "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
  secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
  ghost: "hover:bg-accent hover:text-accent-foreground",
  link: "text-primary underline-offset-4 hover:underline",
  orange: "h-11 px-8 bg-theme-orange hover:bg-theme-orange-dark text-white",
};

const sizeClasses = {
  default: "h-10 px-4 py-2",
  sm: "h-9 px-3",
  lg: "h-11 px-8",
  icon: "h-10 w-10",
};

const classes = cn(
  baseClasses,
  variantClasses[variant],
  sizeClasses[size],
  className
);

const Component = href ? "a" : "button";
const componentProps = href 
  ? { href, ...rest }
  : { type, disabled, ...rest };
---

<Component class={classes} {...componentProps}>
  <slot />
</Component>